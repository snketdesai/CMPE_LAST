{
  "name": "basic-csv",
  "version": "0.0.2",
  "description": "A library designed for basic CSV usage.",
  "author": {
    "name": "Rob Britton",
    "email": "rob@robbritton.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/robbrit/node-basic-csv"
  },
  "dependencies": {
    "csv": "0.3.0",
    "underscore": "*"
  },
  "keywords": [
    "csv"
  ],
  "license": "MIT",
  "contributors": [
    {
      "name": "Rob Britton",
      "email": "rob@robbritton.com"
    }
  ],
  "readme": "What is it?\n===========\n\nIt is a simple library for processing CSV files in Node.js. Most Node.js CSV\nparsing libraries are complex, designed for handling large files as part of\na complicated, evented streaming process. This project is designed to simply\nread a CSV file and give you an array of arrays.\n\nInstall\n=======\n\nEasy:\n\n    npm install basic-csv\n\nUsage:\n======\n\nDesigned to be as easy as possible:\n\n    var basicCSV = require(\"basic-csv\");\n\n    basicCSV.readCSV(\"myCSVFile.csv\", function (error, rows) {\n      console.log(rows); // displays a nested array of arrays\n    });\n\nThere are a few options:\n\n    var basicCSV = require(\"basic-csv\");\n\n    basicCSV.readCSV(\"myCSVFile.csv\", {\n      dropHeader: true\n    }, function (error, rows) {\n      console.log(rows); // same thing, but doesn't include the first row\n    });\n\nBy default, `basic-csv` assumes that you're handling UTF-8 encoded files,\nand that any number-ish strings that it finds should be converted into the\nproper type. You can change those if you like:\n\n    var basicCSV = require(\"basic-csv\");\n\n    basicCSV.readCSV(\"myCSVFile.csv\", {\n      encoding: \"wacky-encoding\",\n      parseNumbers: false\n    }, function (error, rows) {\n      console.log(rows); // same thing, but doesn't include the first row\n    });\n\nYou can also just parse a string directly:\n\n    var basicCSV = require(\"basic-csv\");\n\n    basicCSV.readCSVFromString(\"A1,B1,C1\\nA2,B2,C2\", function (err, rows) {\n      console.log(rows);\n    });\n\n`readCSVFromString` takes the same optional arguments as `readCSV` except for\n`encoding`.\n\n\nLicence\n=======\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "basic-csv@0.0.2",
  "_from": "basic-csv@"
}
